plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'pbl.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def reactDir = "$projectDir/src/main/web/react/utilitypackage"

sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

task installReact(type: Exec) {
    workingDir reactDir
    inputs.dir reactDir
    group = BasePlugin.BUILD_GROUP

    if (System.getProperty("os.name").toLowerCase().contains("windows")) {
        commandLine "npm.cmd", "install"
    } else {
        commandLine "npm", "install"
    }
}

task buildReact(type: Exec) {
    dependsOn installReact
    workingDir reactDir
    inputs.dir reactDir
    group = BasePlugin.BUILD_GROUP

    if (System.getProperty("os.name").toLowerCase().contains("windows")) {
        commandLine "npm.cmd", "run", "build"
    } else {
        commandLine "npm", "run", "build"
    }
}

task copyReactBuildFiles(type: Copy) {
    dependsOn buildReact
    from "$reactDir/build"
    into "$projectDir/src/main/resources/static"
}

task buildAndCopyReact {
    dependsOn copyReactBuildFiles
    group = BasePlugin.BUILD_GROUP
}

tasks.named("processResources") {
    dependsOn copyReactBuildFiles
}

bootRun {
    dependsOn buildAndCopyReact
}

build {
    dependsOn buildAndCopyReact
}
