plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'pbl.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

def reactDir = "$rootDir/frontend"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.20'
    implementation 'net.bramp.ffmpeg:ffmpeg:0.8.0'

    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 문자열 인코딩
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'com.ibm.icu:icu4j:74.2'
}

task installReact(type: Exec) {
    workingDir reactDir
    inputs.file "$reactDir/package.json"
    outputs.dir "$reactDir/node_modules"
    commandLine (System.getProperty("os.name").toLowerCase().contains("windows") ? "npm.cmd" : "npm"), "install"
}

task buildReact(type: Exec) {
    dependsOn installReact
    workingDir reactDir
    inputs.dir "$reactDir/src"
    outputs.dir "$reactDir/dist"
    commandLine (System.getProperty("os.name").toLowerCase().contains("windows") ? "npm.cmd" : "npm"), "run", "build"
}

task copyReactBuildFiles(type: Copy) {
    dependsOn buildReact
    from("$reactDir/dist")
    into("$projectDir/src/main/resources/static")

    outputs.upToDateWhen { false }

    doFirst {
        delete "$projectDir/backend/src/main/resources/static"
    }
}

processResources.dependsOn copyReactBuildFiles
bootRun.dependsOn copyReactBuildFiles
build.dependsOn copyReactBuildFiles
